
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//НаборЗаписейПоследовательности = ПринадлежностьПоследовательностям.ПартионныйУчет;
#Область ЦеныТоваров
	//Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
	//	 //Блокировка = Новый БлокировкаДанных;
	//	 //ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ЦеныТоваров");
	//	 //ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	//	 //ЭлементБлокировки.ИсточникДанных = Товары;
	//	 //ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Товар", "Товар");
	//	 //ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон('00010101', Дата));
	//	 ////ЭлементБлокировки.УстановитьЗначение("Период", Дата);
	//	 //Блокировка.Заблокировать();
	//	
	//	ТекстЗапроса = "ВЫБРАТЬ
	//	               |	РеализацияТовары.НомерСтроки,
	//	               |	РеализацияТовары.Товар,
	//	               |	РеализацияТовары.Количество,
	//	               |	РеализацияТовары.Цена
	//	               |ПОМЕСТИТЬ ВТТовары
	//	               |ИЗ
	//	               |	&Товары КАК РеализацияТовары
	//	               |ГДЕ
	//	               |	РеализацияТовары.Цена = 0
	//	               |;
	//	               |ВЫБРАТЬ
	//	               |	Товары.НомерСтроки,
	//	               |	Товары.Товар,
	//	               |	Товары.Количество,
	//	               |	ЦеныТоваров.Цена КАК Цена,
	//	               |	Товары.Количество * ЕСТЬNULL(ЦеныТоваров.Цена, 0) КАК Сумма
	//	               |ИЗ
	//	               |	ВТТовары КАК Товары
	//	               |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныТоваров.СрезПоследних(&Период, Товар В (ВЫБРАТЬ Товар ИЗ ВТТовары)) КАК ЦеныТоваров
	//	               |	ПО Товары.Товар = ЦеныТоваров.Товар
	//	               |";
	//	Запрос = Новый Запрос(ТекстЗапроса);
	//	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить());
	//	Запрос.УстановитьПараметр("Период", Дата);
	//	Выборка = Запрос.Выполнить().Выбрать();
	//	Пока Выборка.Следующий() Цикл
	//		СтрокаТЧ = Товары.Найти(Выборка.НомерСтроки, "НомерСтроки");
	//		СтрокаТЧ.Цена = Выборка.Цена;
	//		СтрокаТЧ.Сумма = Выборка.Сумма;
	//	КонецЦикла;
	//	Сообщить("Цена "+Товары[0].Цена);
	//	
	//	//тут что-то делаем...
	//	
	//	//И выполняем повторное чтение...
	//	Выборка = Запрос.Выполнить().Выбрать();
	//	Пока Выборка.Следующий() Цикл
	//		СтрокаТЧ = Товары.Найти(Выборка.НомерСтроки, "НомерСтроки");
	//		СтрокаТЧ.Цена = Выборка.Цена;
	//		СтрокаТЧ.Сумма = Выборка.Сумма;
	//	КонецЦикла;
	//	Сообщить("Цена "+Товары[0].Цена);
	//	
	//КонецЕсли;
#КонецОбласти

	//Менеджер = Контрагент.Сотрудник;
	//Сообщить(Менеджер);
	//
	//Сообщить("И еще раз:");
	//
	//Менеджер = Контрагент.Сотрудник;
	//Сообщить(Менеджер);
	//
	//КонтрагентОбъект = Контрагент.ПолучитьОбъект();
	//Если КонтрагентОбъект.Сотрудник = Справочники.Сотрудники.НайтиПоНаименованию("Иванов") Тогда
	//	КонтрагентОбъект.Сотрудник = Справочники.Сотрудники.ПустаяСсылка();
	//Иначе
	//	КонтрагентОбъект.Сотрудник = Справочники.Сотрудники.НайтиПоНаименованию("Иванов");
	//КонецЕсли;
	//КонтрагентОбъект.Записать();
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	//ПринадлежностьПоследовательностям.ПартионныйУчет.Очистить();
	Отказ  = Ложь;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//Движения.ОстаткиТоваров.Прочитать();
	
	//Контроль остатков
	
	 //Блокировка = Новый БлокировкаДанных;
	 //ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиТоваров");
	 //ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	 //ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	 //ЭлементБлокировки.ИсточникДанных = Товары;
	 //ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Товар", "Товар");
	 //Блокировка.Заблокировать();
	 
	 ТекстЗапроса = "ВЫБРАТЬ
	               |	РеализацияТовары.НомерСтроки,
	               |	РеализацияТовары.Товар КАК Товар,
	               |	РеализацияТовары.Количество,
	               |	РеализацияТовары.Цена
	               |ПОМЕСТИТЬ ВТТовары
	               |ИЗ
	               |	Документ.Реализация.Товары КАК РеализацияТовары
	               |ГДЕ
	               |	РеализацияТовары.Ссылка = &Ссылка
	               |
	               //|ИНДЕКСИРОВАТЬ ПО
	               //|	Товар
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РеализацияТовары.Товар,
	               |	РеализацияТовары.Количество,
	               |	ЕСТЬNULL(ОстаткиТоваров.КоличествоОстаток, 0) КАК КоличествоОстаток
	               |ИЗ
	               |	ВТТовары КАК РеализацияТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиТоваров.Остатки(
	               |				&Период,
	               |				Склад = &Склад
				   |					И Товар В
				   |						(ВЫБРАТЬ
				   |							ВТТовары.Товар
				   |						ИЗ
				   |							ВТТовары)
	               |) КАК ОстаткиТоваров
	               |		ПО РеализацияТовары.Товар = ОстаткиТоваров.Товар";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//Запрос.УстановитьПараметр("Период", МоментВремени());
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Склад", Склад);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Количество > Выборка.КоличествоОстаток Тогда
			//Сообщить(СтрШаблон("На складе %1 нехватает остатка товара %2 (имеется %3, необходимо %4)", Склад, Выборка.Товар, Выборка.КоличествоОстаток, Выборка.Количество));
			Сообщить("На складе " + Склад + " нехватает остатка товара " + Выборка.Товар + " (имеется " + Выборка.КоличествоОстаток + ", необходимо " + Выборка.Количество + ")");
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	//Движения
	
	//Остатки
	Для каждого СтрокаТоваров Из Товары Цикл
		НовоеДвижение = Движения.ОстаткиТоваров.Добавить();
		НовоеДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
		НовоеДвижение.Период = Дата;
		НовоеДвижение.Товар = СтрокаТоваров.Товар;
		НовоеДвижение.Склад = Склад;
		НовоеДвижение.Количество = СтрокаТоваров.Количество;
	КонецЦикла;
	
	//Продажи
	Для каждого СтрокаТоваров Из Товары Цикл
		НовоеДвижение = Движения.Продажи.Добавить();
		НовоеДвижение.Период = Дата;
		НовоеДвижение.Контрагент = Контрагент;
		НовоеДвижение.Товар = СтрокаТоваров.Товар;
		НовоеДвижение.Количество = СтрокаТоваров.Количество;
		НовоеДвижение.Стоимость = СтрокаТоваров.Сумма;
	КонецЦикла;
	
	//Движения.Остатки.БлокироватьДляИзменения = Истина;
	
	Движения.ОстаткиТоваров.Записать();
	
	Движения.Продажи.Записать();
	
	
	//Движения.ОстаткиТоваров.Записывать = Истина;
	//Движения.Продажи.Записывать = Истина;
	//Движения.Записать();
	
	
	//Движения.Продажи.Прочитать();
	
	//ТекстЗапроса = "ВЫБРАТЬ Товар, КоличествоОборот ИЗ РегистрНакопления.Продажи.Обороты( , ,,Контрагент = &Контрагент)";
	//Запрос = Новый Запрос(ТекстЗапроса);
	//Запрос.УстановитьПараметр("Контрагент", Контрагент);
	//ТЗ = Запрос.Выполнить().Выгрузить();
	
	
#Область Партии
	////Партии
	//ТекстЗапроса = "ВЫБРАТЬ
	//               |	РеализацияТовары.НомерСтроки,
	//               |	РеализацияТовары.Товар КАК Товар,
	//               |	РеализацияТовары.Количество,
	//               |	РеализацияТовары.Цена
	//               |ПОМЕСТИТЬ ВТТовары
	//               |ИЗ
	//               |	Документ.Реализация.Товары КАК РеализацияТовары
	//               |ГДЕ
	//               |	РеализацияТовары.Ссылка = &Ссылка
	//               |
	//               //|ИНДЕКСИРОВАТЬ ПО
	//               //|	Товар
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	РеализацияТовары.Товар,
	//               |	РеализацияТовары.Количество,
	//               |	ПартииОстатки.Партия КАК Партия,
	//               |	ЕСТЬNULL(ПартииОстатки.КоличествоОстаток, 0) КАК КоличествоПартии,
	//               |	ЕСТЬNULL(ПартииОстатки.СтоимостьОстаток, 0) КАК СтоимостьПартии
	//               |ИЗ
	//               |	ВТТовары КАК РеализацияТовары
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Партии.Остатки(
	//               |				&Период,
	//               |				Склад = &Склад
	//			   |					И Товар В
	//			   |						(ВЫБРАТЬ
	//			   |							ВТТовары.Товар
	//			   |						ИЗ
	//			   |							ВТТовары)
	//               |) КАК ПартииОстатки
	//               |		ПО РеализацияТовары.Товар = ПартииОстатки.Товар
	//               |УПОРЯДОЧИТЬ ПО
	//               |	ПартииОстатки.Партия.Дата,
	//               |	ПартииОстатки.Партия
	//               |ИТОГИ МАКСИМУМ(Количество) ПО
	//               |	РеализацияТовары.Товар";
	//Запрос = Новый Запрос(ТекстЗапроса);
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);
	////Запрос.УстановитьПараметр("Период", МоментВремени());
	//Запрос.УстановитьПараметр("Период", Дата);
	//Запрос.УстановитьПараметр("Склад", Склад);
	//ВыборкаТовары = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Пока ВыборкаТовары.Следующий() Цикл
	//	НадоСписать = ВыборкаТовары.Количество;
	//	ВыборкаПартии = ВыборкаТовары.Выбрать();
	//	Пока ВыборкаПартии.Следующий() Цикл
	//		ОстатокПартии = ВыборкаПартии.КоличествоПартии;
	//		КоличествоСписать = МИН(НадоСписать, ОстатокПартии);
	//		
	//		//Расчет стоимости
	//		Если КоличествоСписать = ОстатокПартии Тогда
	//			СтоимостьСписать = ВыборкаПартии.СтоимостьПартии;
	//		Иначе
	//			СтоимостьСписать = ВыборкаПартии.СтоимостьПартии*КоличествоСписать/ОстатокПартии;
	//		КонецЕсли;
	//		
	//		НовоеДвижение = Движения.Партии.Добавить();
	//		НовоеДвижение.Период = Дата;
	//		НовоеДвижение.Товар = СтрокаТоваров.Товар;
	//		НовоеДвижение.Склад = Склад;
	//		НовоеДвижение.Партия = ВыборкаПартии.Партия;
	//		НовоеДвижение.Количество = КоличествоСписать;
	//		НовоеДвижение.Стоимость = СтоимостьСписать;
	//		
	//		НадоСписать = НадоСписать - НовоеДвижение.Количество;
	//	КонецЦикла;
	//		
	//КонецЦикла;

	//Движения.Партии.Записать();
#КонецОбласти
	
#Область ОпределениеСуммыДокумента	
	////Определение суммы документа
	//ТекстЗапроса = "ВЫБРАТЬ
	//               |	СУММА(Партии.Стоимость) КАК Стоимость
	//               |ИЗ РегистрНакопления.Партии КАК Партии
	//               |ГДЕ 
	//               |	Партии.Регистратор = &Ссылка
	//               |	И Партии.Период = &Период";//Избыточный отбор по периоду, что бы использовался кластерный индекс
	//Запрос = Новый Запрос(ТекстЗапроса);
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//Запрос.УстановитьПараметр("Период", Дата);
	//Выборка = Запрос.Выполнить().Выбрать();
	//Если Выборка.Следующий() Тогда
	//	СуммаДокумента = Выборка.Стоимость;
	//Иначе
	//	СуммаДокумента = 0;
	//КонецЕсли;
	//
	////Здесь должна записываться только шапка документа... Табличная часть не менялась, поэтому записываться не должна
	//Записать();
#КонецОбласти

#Область Проводки	
	////Проводки
	//Для каждого СтрокаТоваров Из Товары Цикл
	//	НоваяПроводка = Движения.Проводки.Добавить();
	//	НоваяПроводка.Период = Дата;
	//	Проводка.Организация = Организация;
	//	НоваяПроводка.СчетДт = ПланыСчетов.СчетаУчета.Затраты;
	//	НоваяПроводка.СчетКт = ПланыСчетов.СчетаУчета.ТоварыНаСкладе;
	//	НовоеДвижение.Контрагент = Контрагент;
	//	НовоеДвижение.Товар = СтрокаТоваров.Товар;
	//	НовоеДвижение.КоличествоКт = СтрокаТоваров.Количество;
	//	НовоеДвижение.Стоимость = СтрокаТоваров.Сумма;
	//КонецЦикла;
	

#КонецОбласти
КонецПроцедуры
